/***********************************************************************

    SubWinow3のコールバッククラス
    Grp02.cppをコピーして追加(2025.6.19yori)

***********************************************************************/

#include "Grp03.h"
#include "UsrMsg.h"



/***********************************************************************

    コマンド01
    追加(2025.6.24yori)

***********************************************************************/

int Grp03::Cmd01()
{
    int ret = 0;

    WaitForSingleObject(HwCtrl::hSEMA_VSEQ, INFINITE);

    HwCtrl::m_VecStepSeq = VEC_STEP_SEQ::SCANNER_SCAN_START_REQ; // スキャンスタート

    ReleaseSemaphore(HwCtrl::hSEMA_VSEQ, 1, NULL);

    return (ret);
}



/***********************************************************************

    コマンド02
    追加(2025.6.24yori)

***********************************************************************/

int Grp03::Cmd02()
{
    int ret = 0;

    WaitForSingleObject(HwCtrl::hSEMA_VSEQ, INFINITE);

    HwCtrl::m_VecStepSeq = VEC_STEP_SEQ::SCANNER_SCAN_STOP_REQ; // スキャンストップ

    ReleaseSemaphore(HwCtrl::hSEMA_VSEQ, 1, NULL);

    return (ret);
}



/***********************************************************************

    コマンド03
    追加(2025.7.2yori)

***********************************************************************/

int Grp03::Cmd03()
{
    int ret = 0;

    WaitForSingleObject(HwCtrl::hSEMA_VSEQ, INFINITE);

    HwCtrl::m_VecStepSeq = VEC_STEP_SEQ::SENS_CHECK_REQ; // 感度チェック開始

    ReleaseSemaphore(HwCtrl::hSEMA_VSEQ, 1, NULL);

    return (ret);
}



/***********************************************************************

    コマンド04
    追加(2025.7.3yori)

***********************************************************************/

int Grp03::Cmd04()
{
    int ret = 0;

    WaitForSingleObject(HwCtrl::hSEMA_VSEQ, INFINITE);

    HwCtrl::m_VecStepSeq = VEC_STEP_SEQ::POINTER_CHECK_REQ; // ポインタ位置チェック開始

    ReleaseSemaphore(HwCtrl::hSEMA_VSEQ, 1, NULL);

    return (ret);
}



/***********************************************************************

    コマンド05
    追加(2025.8.11yori)

***********************************************************************/

int Grp03::Cmd05()
{
    int ret = 0;

    // PolyWorksから接続した場合、非接触設定メニューが閉じられたことをPolyWorks側に知らせる。(2025.9.3yori)
    if (HwCtrl::m_b_Button_ConnectFlag == false)
    {
        HwCtrl::AppCommandSend(APP_SEND_CMD::CLOSE_SCANNER_MEAS_FORM);
    }

    return (ret);
}



/***********************************************************************

    コマンド06
    追加(2025.8.12yori)

***********************************************************************/

int Grp03::Cmd06(int scanmode)
{
    int ret = 0;

    HwCtrl::Func61(scanmode); // スキャナ計測モード変更

    return (ret);
}



/***********************************************************************

    コマンド07
    追加(2025.8.21yori)

***********************************************************************/

int Grp03::Cmd07(int sens)
{
    int ret = 0;

    HwCtrl::Func62(sens); // 感度変更

    return (ret);
}



/***********************************************************************

    コマンド08
    追加(2025.8.21yori)

***********************************************************************/

int Grp03::Cmd08(int power)
{
    int ret = 0;

    HwCtrl::Func63(power); // ガイドレーザーパワーの設定

    return (ret);
}



/***********************************************************************

    コマンド09
    追加(2025.8.21yori)

***********************************************************************/

int Grp03::Cmd09(int pitch)
{
    int ret = 0;

    HwCtrl::Func64(pitch); // X点間補間モードの設定

    return (ret);
}



/***********************************************************************

    コマンド10
    追加(2025.8.23yori)

***********************************************************************/

int Grp03::Cmd10()
{
    int ret = 0;

    HwCtrl::Func65(); // 距離マスクの設定

    return (ret);
}



/***********************************************************************

    コマンド11
    追加(2025.8.24yori)

***********************************************************************/

int Grp03::Cmd11()
{
    int ret = 0;

    HwCtrl::Func66(); // 輝度スライスの設定

    return (ret);
}



/***********************************************************************

    コマンド12
    追加(2025.8.24yori)

***********************************************************************/

int Grp03::Cmd12()
{
    int ret = 0;

    HwCtrl::Func67(); // 感度スライスの設定

    return (ret);
}



/***********************************************************************

    コマンド13
    追加(2025.8.24yori)

***********************************************************************/

int Grp03::Cmd13()
{
    int ret = 0;

    HwCtrl::Func68(); // 角度マスクの設定

    return (ret);
}



/***********************************************************************

    コマンド14
    追加(2025.8.25yori)

***********************************************************************/

int Grp03::Cmd14(int twopeak)
{
    int ret = 0;

    HwCtrl::Func69(twopeak); // 2ピークマスクの設定

    return (ret);
}



/***********************************************************************

    コマンド15
    追加(2025.8.25yori)

***********************************************************************/

int Grp03::Cmd15()
{
    int ret = 0;

    HwCtrl::Func70(); // エッジマスクの設定

    return (ret);
}



/***********************************************************************

    コマンド16
    追加(2025.8.27yori)

***********************************************************************/

int Grp03::Cmd16()
{
    int ret = 0;

    HwCtrl::Func71(); // スキャナをリセット

    return (ret);
}



/***********************************************************************

    コマンド17
    追加(2025.8.27yori)

***********************************************************************/

int Grp03::Cmd17()
{
    int ret = 0;

    HwCtrl::Func32(); // スキャナネットワーク設定

    return (ret);
}